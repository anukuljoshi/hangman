{"version":3,"sources":["components/Header.js","components/Figure.js","components/WrongLetters.js","components/Word.js","components/Notification.js","helpers/helpers.js","components/PopUp.js","App.js","index.js"],"names":["Header","Figure","errors","wrongLetters","length","height","width","className","x1","y1","x2","y2","cx","cy","r","WrongLetters","map","letter","i","key","Word","selectedWord","correctLetters","split","includes","Notification","showNotification","setter","setTimeout","checkWin","correct","wrong","word","status","forEach","PopUp","setPlayable","playAgain","finalMessage","finalMessageRevealWord","playable","useEffect","style","display","onClick","words","Math","floor","random","App","useState","setCorrectLetters","setWrongLetters","setShowNotification","handleKeyDown","event","keyCode","toLowerCase","show","currLetters","window","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54431ead.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => {\n    return (\n        <>\n            <h1>Hangman</h1>\n            <p>Find the hidden word - Enter a letter</p>\n        </>\n    )\n}\n\nexport default Header\n","import React from 'react'\n\nconst Figure = ({ wrongLetters }) => {\n    const errors = wrongLetters.length;\n    return (\n        <svg height=\"250\" width=\"200\" className=\"figure-container\">\n            {/* <!-- Rod --> */}\n            <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\"></line>\n            <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"50\"></line>\n            <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"230\"></line>\n            <line x1=\"20\" y1=\"230\" x2=\"100\" y2=\"230\"></line>\n            {/* <!-- Head --> */}\n            {errors > 0 && <circle cx=\"140\" cy=\"70\" r=\"20\" className=\"figure-part\"></circle>}\n            \n            {/* <!-- Body --> */}\n            {errors > 1 && <line x1=\"140\" y1=\"90\" x2=\"140\" y2=\"150\" className=\"figure-part\"></line>}\n            \n            {/* <!-- Arms --> */}\n            {errors > 2 && <line x1=\"140\" y1=\"120\" x2=\"120\" y2=\"100\" className=\"figure-part\"></line>}\n            {errors > 3 && <line x1=\"140\" y1=\"120\" x2=\"160\" y2=\"100\" className=\"figure-part\"></line>}\n\n            {/* <!-- Legs --> */}\n            {errors > 4 && <line x1=\"140\" y1=\"150\" x2=\"120\" y2=\"180\" className=\"figure-part\"></line>}\n            {errors > 5 && <line x1=\"140\" y1=\"150\" x2=\"160\" y2=\"180\" className=\"figure-part\"></line>}\n        </svg>\n    )\n}\n\nexport default Figure;\n","import React from 'react'\n\nconst WrongLetters = ({ wrongLetters }) => {\n    return (\n        <div className=\"wrong-letters-container\">\n            <div>\n                {\n                    wrongLetters.length > 0 && <p>Wrong</p>\n                }\n                {\n                    wrongLetters\n                        .map((letter, i) => {\n                            return (\n                                <span key={i}>\n                                    { `${letter}, ` }\n                                </span>\n                            )\n                        })\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default WrongLetters\n","import React from 'react'\n\nconst Word = ({ selectedWord, correctLetters }) => {\n    return (\n        <div className=\"word\">\n            {\n                selectedWord.split('').map((letter, i) => {\n                    return (\n                        <span className=\"letter\" key={i}>\n                            {\n                                correctLetters.includes(letter) ? \n                                letter : \n                                ''\n                            }\n                        </span>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default Word\n","import React from 'react'\n\nconst Notification = ({ showNotification }) => {\n    return (\n        <div className={`notification-container ${showNotification ? 'show' : ''}`}>\n            <p>You have already entered this letter</p>\n        </div>\n    )\n}\n\nexport default Notification\n","export const showNotification = (setter) => {\n    setter(true);\n    setTimeout(() => {\n        setter(false);\n    }, 2000)\n}\n\nexport const checkWin = (correct, wrong, word) => {\n    let status = 'win';\n\n    word.split('').forEach(letter => {\n        if(!correct.includes(letter)){\n            status = '';\n        }\n    })\n\n    // check for loss\n    if(wrong.length===6){\n        status = 'lose';\n    }\n    return status;\n}","import React, { useEffect} from 'react';\nimport { checkWin } from '../helpers/helpers';\n\nconst PopUp = ({correctLetters, wrongLetters, selectedWord, setPlayable, playAgain}) => {\n    let finalMessage = '';\n    let finalMessageRevealWord = '';\n    let playable = true;\n\n    if(checkWin(correctLetters, wrongLetters, selectedWord)==='win'){\n        finalMessage = 'Congratulations! You won!';\n        playable = false;\n    }else if(checkWin(correctLetters, wrongLetters, selectedWord)==='lose'){\n        finalMessage = 'Unfortunately you lost.';\n        finalMessageRevealWord = `...the word was: ${selectedWord}`;\n        playable = false;\n    }\n\n    useEffect(() => setPlayable(playable));\n\n    return (\n        <div className=\"popup-container\" style={finalMessage!=='' ? {display:'flex'} : {}}>\n            <div className=\"popup\">\n            <h2>{finalMessage}</h2>\n            <h3>{finalMessageRevealWord}</h3>\n            <button onClick={playAgain}>Play Again</button>\n            </div>\n        </div>\n    )\n}\n\nexport default PopUp\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport Header from './components/Header';\nimport Figure from './components/Figure';\nimport WrongLetters from './components/WrongLetters';\nimport Word from './components/Word';\nimport Notification from './components/Notification';\nimport PopUp from './components/PopUp';\nimport { showNotification as show } from './helpers/helpers'\n\nconst words = ['rich', 'sign', 'student', 'hardware', 'museum', 'freedom', 'language', 'magnitude', 'physical', 'unfortunate'];\nlet selectedWord = words[Math.floor(Math.random()*words.length)];\n\nfunction App() {\n    const [playable, setPlayable] = useState(true);\n    const [correctLetters, setCorrectLetters] = useState([]);\n\tconst [wrongLetters, setWrongLetters] = useState([])\n\tconst [showNotification, setShowNotification] = useState(false);\n\t\n\tuseEffect(() => {\n\t\tconst handleKeyDown = (event) => {\n\t\t\tconst {key, keyCode} = event;\n\t\t\tif (playable && keyCode >= 65 && keyCode <= 90) {\n\t\t\t\tconst letter = key.toLowerCase();\n\t\t\t\tif (selectedWord.includes(letter)) {\n\t\t\t\t\tif (!correctLetters.includes(letter)) {\n\t\t\t\t\t\tsetCorrectLetters(currLetters => [...currLetters, letter]);\n\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\tshow(setShowNotification);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!wrongLetters.includes(letter)) {\n\t\t\t\t\t\tsetWrongLetters(currLetters => [...currLetters, letter]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tshow(setShowNotification);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\twindow.addEventListener('keydown', handleKeyDown);\n\t\treturn () => window.removeEventListener('keydown', handleKeyDown);\n\t}, [correctLetters, wrongLetters, playable]);\n\n\tconst playAgain = () => {\n\t\tsetPlayable(true);\n\n\t\tsetCorrectLetters([]);\n\t\tsetWrongLetters([]);\n\t\tconst random = Math.floor(Math.random() * words.length);\n\t\tselectedWord = words[random];\n\t}\n\n    return (\n      <div className=\"App\">\n        <Header></Header>\n\t\t<div className=\"game-container\">\n\t\t\t<Figure wrongLetters={wrongLetters}></Figure>\n\t\t\t<WrongLetters wrongLetters={wrongLetters}></WrongLetters>\n\t\t\t<Word selectedWord={selectedWord} correctLetters={correctLetters} />\n\t\t</div>\n\t\t<PopUp correctLetters={correctLetters} wrongLetters={wrongLetters} selectedWord={selectedWord} setPlayable={setPlayable} playAgain={playAgain}></PopUp>\n\t\t<Notification showNotification={showNotification}></Notification>\n      </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}